#include "../inc/iomgr.h"

#include <iostream>
#include <sstream>
#include <iomanip>
#include <cmath>
#include <algorithm>
#include <cstring>
#include <map>

using namespace std;
using namespace nnet;
//!============================================================================
//!============================================================================
//!============================================================================
IOMgr::IOMgr(){
  m_data  = NULL;
  m_target= NULL;
}
//!============================================================================
//!============================================================================
//!============================================================================
IOMgr::~IOMgr(){
}
//!============================================================================
//!============================================================================
//!============================================================================
void IOMgr::shuffle(){
  //Random indexes for data
  srand(time(NULL));
  random_shuffle(m_itrn.begin(), m_itrn.end());
  random_shuffle(m_ival.begin(), m_ival.end());
  random_shuffle(m_itst.begin(), m_itst.end());
}
//!============================================================================
//!============================================================================
//!============================================================================
void IOMgr::set_trn(std::vector<unsigned int> &v){
  m_itrn.clear();
  m_itrn.assign(v.begin(), v.end());
}
//!============================================================================
//!============================================================================
//!============================================================================
void IOMgr::set_val(std::vector<unsigned int> &v){
  m_ival.clear();
  m_ival.assign(v.begin(), v.end());
}
//!============================================================================
//!============================================================================
//!============================================================================
void IOMgr::set_tst(std::vector<unsigned int> &v){
  m_itst.clear();
  m_itst.assign(v.begin(), v.end());
}
//!============================================================================
//!============================================================================
//!============================================================================
double *IOMgr::data(unsigned int it){
    return m_data->at(it).data();
}
//!============================================================================
//!============================================================================
//!============================================================================
double *IOMgr::target(unsigned int it){
    return m_target->at(it).data();
}
//!============================================================================
//!============================================================================
//!============================================================================
bool IOMgr::initialize(vector<vector<double> > *data, vector<vector<double> > *target){
    if(data->size() != target->size()){
        cout << "IOMgr::ERROR: data and target do not have the same length" << endl;
        return false;
    }
    m_data = data;
    m_target = target;
    in_dim = m_data->at(0).size();
    out_dim = m_target->at(0).size();
    evt_dim = m_data->size();

    return true;
}

//!============================================================================
